2-way data binding - 

When properties in the model are updated the view/UI is updated immediately
When the view/UI is updated the model is changed too.


Dependency Injection - 

Dependency injection means giving an object its instance variables.
Classes have things (aka dependencies or variables or instance variables) they call methods on.
We pass variables into the constructor (so inject the dependency into the class).


Routing - Routes are paths the user takes which are attached to code that will be triggered when a user reaches the specific route.

Templates - 




Boilerplate (code) - 

sections of code that have to be included in many places with little or
no alteration. 


Server-Side Rendering - 

Inital request loads the page, layout, CSS, JS, and content.
Can also partial update but ther server handles
the rendering and inserting that output into the DOM


Client-Side Rendering - (slower)

initial request loads the page layout, CSS, and JS. 
Some or all of the content isn't included. 
JS makes another request and gets a response (JSON)  
and then generates the HTML using a templating library



String-based templates -

e.g. Handlebars.js
Take string or text templates and replace the dynamic parts
with data fom models. Arguably better performance


DOM-based templates -

Create HTML on steroids, HTML is annotated with extra attributes to describe binding
and events. Need less code but more Dev magic.